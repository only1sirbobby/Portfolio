:root {
  --color-accent: #5eead4;
  --background-accent: rgba(45, 212, 191, 0.1);
  --color-highlight: #e2e8f0;
}

html {
  scroll-behavior: smooth;
}

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  font-family: "Inter", sans-serif;
}

body {
  background: #0f172a;
  color: #94a3b8;
  /* Adds space inside the edges: 4rem (top/bottom), 2rem (left/right) */
  padding: 4rem 2rem;
  display: grid;
  /* Creates 1 column that takes up all available width */
  grid-template-columns: repeat(1, minmax(0, 1fr));
  gap: 6rem;
}

p {
  line-height: 1.5rem;
}

p::selection,
h1::selection,
h2::selection,
h3::selection,
h4::selection,
h5::selection,
h6::selection {
  background: var(--color-accent);
  color: #0f172a;
}

/* This code creates a dark blue layer that covers the entire screen, stays fixed when you scroll, and is a bit transparent so you can see through it a little. Itâ€™s often used as a background effect, like for pop-ups or overlays. */
.underlay {
  /* Keeps the element stuck in place on the screen, even when scrolling */
  position: fixed;
  /* Makes the background a dark blue color (#172554) */
  background: #172554;
  /* Stretches the element to cover the whole screen (top, right, bottom, left) */
  inset: 0;
  /* Makes it slightly see-through (35% solid, 65% transparent) */
  opacity: 0.15;
}

/* This is useful when you want the header, main content, and footer to stay on top of other overlapping elements, like a fixed background or an overlay, while still flowing naturally in the layout. */
header,
main,
footer {
  /* Lets these elements stay in their normal spot but allows position tweaks */
  position: relative;
  /* Puts them above elements with a lower z-index (like 0 or 5) */
  z-index: 10;
}

header {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  max-width: 300px;
}

header h1,
header h4,
.lightText {
  color: var(--color-highlight);
}

header a {
  text-decoration: none;
}

header h1 {
  font-weight: 600;
}

header h4 {
  font-weight: 400;
}

nav {
  font-size: 0.9rem;
}

nav a {
  font-size: 0.9rem;
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

nav a:hover .nav-line {
  background: var(--color-accent);
  width: 28px;
}

.nav-line {
  height: 1px;
  width: 20px;
  background: var(--color-highlight);
  transition-duration: 200ms;
}

.social-link-container {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.social-link {
  font-size: 1.4rem;
  color: inherit;
  text-decoration: none;
  transition-duration: 200ms;
}

.social-link:hover {
  color: var(--color-highlight);
}

main {
  display: flex;
  flex-direction: column;
  gap: 6rem;
}

section {
  display: flex;
  flex-direction: column;
  gap: 2rem;
}

.sticky-header {
  position: sticky;
  top: 0;
  padding: 1rem 0;
}

.sticky-header h2 {
  position: relative;
  z-index: 2;
}

.sticky-header::before {
  content: "";
  position: absolute;
  inset: 0;
  background: #101a3199;
  backdrop-filter: blur (5px);
}

section h2,
.experience-card h3 {
  text-transform: uppercase;
  font-size: 1rem;
  font-weight: 500;
}

.about-contents {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.about-contents {
  font-size: 1.1rem;
}

.anchor-text {
  color: var(--color-highlight);
  text-decoration: none;
  transform-origin: 200ms;
}

.anchor-text:hover {
  color: var(--color-accent);
}

.experience-contents,
.project-contents {
  display: flex;
  flex-direction: column;
  gap: 4rem;
}

.experience-card,
.project-card {
  display: grid; /* Turns this into a grid so its kids line up neatly */
  grid-template-columns: repeat(
    1,
    minmax(0, 1fr)
  ); /* Makes 1 column that uses all the space */
}

.experience-card {
  gap: 0.5rem 1rem;
}

.project-card {
  gap: 1rem 1rem;
}

.card-column {
  display: grid;
  flex-direction: column;
  gap: 0.75rem;
}

.card-header-link {
  text-decoration: none;
}

.tenure {
  opacity: 0.7;
  text-transform: uppercase;
  font-size: 0.8rem;
}

.experience-card p {
  font-size: 0.9rem;
}

.card-hearder {
  font-weight: 400;
  font-size: 1rem;
}

.anchor-icon {
  padding-left: 0.5rem;
}

.tag-container {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
  color: var(--color-accent);
}

.tag {
  background: var(--background-accent);
  border-radius: 0.5rem;
  padding: 0.25rem 0.5rem;
}

.tag p {
  font-size: 0.8rem;
}

.project-image-container {
  max-width: 200px;
  overflow: hidden;
  display: grid;
  place-items: center;
  aspect-ratio: 16 / 9;
  order: 2;
  border-radius: 0.25rem;
}

.project-image-container img {
  max-width: 200px;
  overflow: hidden;
}

.project-stat-link {
  display: flex;
  align-items: center;
  gap: 0.5em;
  font-size: 0.8rem;
}

.project-archive-link {
  position: relative;
  color: var(--color-highlight);
  text-decoration: none;
  transition-duration: 200ms;
  margin-right: auto;
}

.project-archive-link span {
  transition-duration: 200ms;
}

.project-archive-link :hover span {
  padding-left: 0.5rem;
}

.project-archive-link::after {
  content: "";
  position: absolute;
  left: 0;
  width: 100%;
  height: 2px;
  bottom: 0;
  background: transparent;
  transition: 200ms;
}

.project-archive-link:hover ::after {
  background: var(--color-accent);
}

footer {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  gap: 2rem;
  align-items: flex-start;
}

footer p {
  font-size: 0.9rem;
}

.scroll-to-top {
  text-decoration: none;
  color: var(--color-accent);
  background: var(--background-accent);
  padding: 0 0.75rem;
  aspect-ratio: 1/1;
  display: grid;
  place-items: center;
  border-radius: 100%;
  overflow: hidden;
  transition: 200ms;
}

.scroll-to-top:hover {
  opacity: 0.6;
}

/* If the screen is 640 pixels wide or more (like a small tablet), use these styles */
@media (min-width: 640px) {
  body {
    padding: 5rem 3rem;
  }

  .project-card,
  .experience-card {
    grid-template-columns: repeat(4, minmax(0, 1fr));
  }
  .card-column {
    grid-column: span 3 / span 3;
  }
  .project-image-container {
    order: 0;
  }

  header {
    max-width: unset;
  }

  header h1 {
    font-size: 3rem;
  }

  header h4 {
    font-size: 1.4rem;
  }

  header p {
    max-width: 300px;
  }

  .social-link-container {
    gap: 1.5rem;
  }

  .social-link-container {
    font-size: 2rem;
  }
}

/* If the screen is 1024 pixels wide or more (like a laptop or desktop), use these styles */
@media (min-width: 1024px) {
  body {
    grid-template-columns: repeat(2, minmax(0, 1fr));
    gap: 2rem;
    padding: 6rem;
    padding-top: 0;
  }

  header {
    position: sticky;
    top: 0;
    margin-left: auto;
    height: fit-content;
    padding-bottom: 6rem;
  }

  header h1 {
    font-size: 3rem;
  }

  header h4 {
    font-size: 1.4rem;
  }

  header p {
    max-width: 300px;
  }

  nav {
    padding: 2rem 0;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    flex: 1;
  }

  nav a {
    font-size: 1rem;
  }

  .social-link-container {
    gap: 1.5rem;
  }

  .social-link-container {
    font-size: 2rem;
  }

  header,
  main {
    padding-top: 6rem;
    max-width: 600px;
    width: 100%;
  }

  main {
    margin-left: auto;
  }

  .sticky-header {
    display: none;
  }

  .project-card,
  .experience-card {
    padding: 1rem;
    border-radius: 0.5rem;
    border: 1px solid transparent;
    transition-duration: 200ms;
  }

  .project-card:hover,
  .experience-card:hover {
    background: #1b2541;
    border: 1px solid #94a3b826;
    box-shadow: 0 0 20px 3px #0f172a;
  }

  .project-archive-link,
  .resume-link {
    padding-left: 1rem;
  }

  footer {
    grid-column: span 2 / span 2;
    flex-direction: row;
    max-width: 1200px;
    margin: 0 auto;
    width: 100%;
  }
}
